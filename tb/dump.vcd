$date
   Tue Aug 20 17:11:43 2024
$end

$version
  2023.2
  $dumpfile ("dump.vcd") 
$end

$timescale
  1ps
$end

$scope module top $end
$var reg 1 ! clk $end
$scope module intf $end
$var wire 1 " clk $end
$var reg 1 # i_rst_n $end
$var reg 24 $ i_A [23:0] $end
$var reg 24 % i_B [23:0] $end
$var reg 144 & o_C [143:0] $end
$var reg 1 ' o_C_valid $end
$upscope $end
$scope module dut $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 24 * i_A [23:0] $end
$var wire 24 + i_B [23:0] $end
$var reg 144 , o_C [143:0] $end
$var reg 1 - o_C_valid $end
$var reg 4 . transaction_cnt [3:0] $end
$var reg 8 / A11 [7:0] $end
$var reg 8 0 A21 [7:0] $end
$var reg 8 1 A31 [7:0] $end
$var reg 8 2 B11 [7:0] $end
$var reg 8 3 B12 [7:0] $end
$var reg 8 4 B13 [7:0] $end
$var reg 8 5 a11_12 [7:0] $end
$var reg 8 6 a12_13 [7:0] $end
$var reg 8 7 a21_22 [7:0] $end
$var reg 8 8 a22_23 [7:0] $end
$var reg 8 9 a31_32 [7:0] $end
$var reg 8 : a32_33 [7:0] $end
$var reg 8 ; b11_21 [7:0] $end
$var reg 8 < b21_31 [7:0] $end
$var reg 8 = b12_22 [7:0] $end
$var reg 8 > b22_32 [7:0] $end
$var reg 8 ? b13_23 [7:0] $end
$var reg 8 @ b23_33 [7:0] $end
$var reg 8 A a21_buffer [7:0] $end
$var reg 8 B a31_buffer1 [7:0] $end
$var reg 8 C a31_buffer2 [7:0] $end
$var reg 8 D b12_buffer [7:0] $end
$var reg 8 E b13_buffer1 [7:0] $end
$var reg 8 F b13_buffer2 [7:0] $end
$scope module mac11 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 G i_a [7:0] $end
$var wire 8 H i_b [7:0] $end
$var reg 8 5 o_x [7:0] $end
$var reg 8 ; o_y [7:0] $end
$var reg 16 I o_out [15:0] $end
$var reg 4 . o_transaction_cnt [3:0] $end
$var reg 8 J x_d [7:0] $end
$var reg 8 K y_d [7:0] $end
$var reg 16 L out_d [15:0] $end
$upscope $end
$scope module mac12 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 M i_a [7:0] $end
$var wire 8 N i_b [7:0] $end
$var reg 8 6 o_x [7:0] $end
$var reg 8 = o_y [7:0] $end
$var reg 16 O o_out [31:16] $end
$var reg 4 P o_transaction_cnt [3:0] $end
$var reg 8 Q x_d [7:0] $end
$var reg 8 R y_d [7:0] $end
$var reg 16 S out_d [15:0] $end
$upscope $end
$scope module mac13 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 T i_a [7:0] $end
$var wire 8 U i_b [7:0] $end
$var reg 8 V o_x [7:0] $end
$var reg 8 ? o_y [7:0] $end
$var reg 16 W o_out [47:32] $end
$var reg 4 X o_transaction_cnt [3:0] $end
$var reg 8 Y x_d [7:0] $end
$var reg 8 Z y_d [7:0] $end
$var reg 16 [ out_d [15:0] $end
$upscope $end
$scope module mac21 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 \ i_a [7:0] $end
$var wire 8 ] i_b [7:0] $end
$var reg 8 7 o_x [7:0] $end
$var reg 8 < o_y [7:0] $end
$var reg 16 ^ o_out [63:48] $end
$var reg 4 _ o_transaction_cnt [3:0] $end
$var reg 8 ` x_d [7:0] $end
$var reg 8 a y_d [7:0] $end
$var reg 16 b out_d [15:0] $end
$upscope $end
$scope module mac22 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 c i_a [7:0] $end
$var wire 8 d i_b [7:0] $end
$var reg 8 8 o_x [7:0] $end
$var reg 8 > o_y [7:0] $end
$var reg 16 e o_out [79:64] $end
$var reg 4 f o_transaction_cnt [3:0] $end
$var reg 8 g x_d [7:0] $end
$var reg 8 h y_d [7:0] $end
$var reg 16 i out_d [15:0] $end
$upscope $end
$scope module mac23 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 j i_a [7:0] $end
$var wire 8 k i_b [7:0] $end
$var reg 8 l o_x [7:0] $end
$var reg 8 @ o_y [7:0] $end
$var reg 16 m o_out [95:80] $end
$var reg 4 n o_transaction_cnt [3:0] $end
$var reg 8 o x_d [7:0] $end
$var reg 8 p y_d [7:0] $end
$var reg 16 q out_d [15:0] $end
$upscope $end
$scope module mac31 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 r i_a [7:0] $end
$var wire 8 s i_b [7:0] $end
$var reg 8 9 o_x [7:0] $end
$var reg 8 t o_y [7:0] $end
$var reg 16 u o_out [111:96] $end
$var reg 4 v o_transaction_cnt [3:0] $end
$var reg 8 w x_d [7:0] $end
$var reg 8 x y_d [7:0] $end
$var reg 16 y out_d [15:0] $end
$upscope $end
$scope module mac32 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 z i_a [7:0] $end
$var wire 8 { i_b [7:0] $end
$var reg 8 : o_x [7:0] $end
$var reg 8 | o_y [7:0] $end
$var reg 16 } o_out [127:112] $end
$var reg 4 ~ o_transaction_cnt [3:0] $end
$var reg 8 !! x_d [7:0] $end
$var reg 8 "! y_d [7:0] $end
$var reg 16 #! out_d [15:0] $end
$upscope $end
$scope module mac33 $end
$var wire 1 ( i_clk $end
$var wire 1 ) i_rst_n $end
$var wire 8 $! i_a [7:0] $end
$var wire 8 %! i_b [7:0] $end
$var reg 8 &! o_x [7:0] $end
$var reg 8 '! o_y [7:0] $end
$var reg 16 (! o_out [143:128] $end
$var reg 4 )! o_transaction_cnt [3:0] $end
$var reg 8 *! x_d [7:0] $end
$var reg 8 +! y_d [7:0] $end
$var reg 16 ,! out_d [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
bx !!
0"
bx "!
x#
bx #!
bx $
bx $!
bx %
bx %!
bx &
bx &!
x'
bx '!
0(
bx (!
x)
bx )!
bx *
bx *!
bx +
bx +!
bx ,
bx ,!
x-
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
bx k
bx l
bx m
bx n
bx o
bx p
bx q
bx r
bx s
bx t
bx u
bx v
bx w
bx x
bx y
bx z
bx {
bx |
bx }
bx ~
$end

#10000
1!
1"
1(

#20000
0!
0"
0#
b0 $
b0 %
0(
0)
b0 *
b0 +
b0 /
b0 0
b0 1
b0 2
b0 3
b0 4
b0 G
b0 H
b0 J
b0 K

#30000
1!
b0 !!
1"
b0 "!
b0 #!
b0 $!
b0 %!
b0 &
b0 &!
0'
b0 '!
1(
b0 (!
b0 )!
b0 *!
b0 +!
b0 ,
b0 ,!
0-
b0 .
b0 5
b0 6
b0 7
b0 8
b0 9
b0 :
b0 ;
b0 <
b0 =
b0 >
b0 ?
b0 @
b0 A
b0 B
b0 C
b0 D
b0 E
b0 F
b0 I
b0 L
b0 M
b0 N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
b0 W
b0 X
b0 Y
b0 Z
b0 [
b0 \
b0 ]
b0 ^
b0 _
b0 `
b0 a
b0 b
b0 c
b0 d
b0 e
b0 f
b0 g
b0 h
b0 i
b0 j
b0 k
b0 l
b0 m
b0 n
b0 o
b0 p
b0 q
b0 r
b0 s
b0 t
b0 u
b0 v
b0 w
b0 x
b0 y
b0 z
b0 {
b0 |
b0 }
b0 ~

#40000
0!
0"
0(

#50000
1!
1"
1(

#60000
0!
0"
0(

#70000
1!
1"
1(

#80000
0!
0"
1#
b111101011111000111101001 $
b100011110111101000100010 %
0(
1)
b111101011111000111101001 *
b100011110111101000100010 +
b11101001 /
b11110001 0
b11110101 1
b100010 2
b1111010 3
b10001111 4
b11101001 G
b100010 H
b11101001 J
b100010 K
b1111110011110010 L

#90000
1!
1"
b1111110011110010 &
1(
b1 )!
b1111110011110010 ,
b1 .
b11101001 5
b100010 ;
b11110001 A
b11110101 B
b1111010 D
b10001111 E
b1111110011110010 I
b1111100111100100 L
b11101001 M
b1111010 N
b1 P
b11101001 Q
b1111010 R
b1111010100001010 S
b1 X
b11110001 \
b100010 ]
b1 _
b11110001 `
b100010 a
b1111111000000010 b
b1 f
b1 n
b1 v
b1 ~

#100000
0!
0"
b1000010111110100010100 $
b111101011010011101000100 %
0(
b1000010111110100010100 *
b111101011010011101000100 +
b10100 /
b1111101 0
b100001 1
b1000100 2
b10100111 3
b11110101 4
b10100 G
b1000100 H
b10100 J
b1000100 K
b1001000010 L

#110000
1!
1"
b1111111000000010000000000000000011110101000010100000001001000010 &
1(
b10 )!
b1111111000000010000000000000000011110101000010100000001001000010 ,
b10 .
b10100 5
b11101001 6
b11110001 7
b1000100 ;
b100010 <
b1111010 =
b1111101 A
b100001 B
b11110101 C
b10100111 D
b11110101 E
b10001111 F
b1001000010 I
b11110010010 L
b10100 M
b10100111 N
b1111010100001010 O
b10 P
b10100 Q
b10100111 R
b1110111000010110 S
b11101001 T
b10001111 U
b10 X
b11101001 Y
b10001111 Z
b101000100111 [
b1111101 \
b1000100 ]
b1111111000000010 ^
b10 _
b1111101 `
b1000100 a
b1111100110110 b
b11110001 c
b1111010 d
b10 f
b11110001 g
b1111010 h
b1111100011011010 i
b10 n
b11110101 r
b100010 s
b10 v
b11110101 w
b100010 x
b1111111010001010 y
b10 ~

#120000
0!
0"
b100100110011000101101 $
b11011111100101001010110 %
0(
b100100110011000101101 *
b11011111100101001010110 +
b101101 /
b1100110 0
b10010 1
b1010110 2
b11001010 3
b1101111 4
b101101 G
b1010110 H
b101101 J
b1010110 K
b1000101100000 L

#130000
1!
b11110101 !!
1"
b1111010 "!
b1111101011000010 #!
b1111111010001010000000000000000011111000110110100001111100110110000010100010011111101110000101100001000101100000 &
1(
b11 )!
b1111111010001010000000000000000011111000110110100001111100110110000010100010011111101110000101100001000101100000 ,
b11 .
b101101 5
b10100 6
b1111101 7
b11110001 8
b11110101 9
b1010110 ;
b1000100 <
b10100111 =
b1111010 >
b10001111 ?
b1100110 A
b10010 B
b100001 C
b11001010 D
b1101111 E
b11110101 F
b1000101100000 I
b10000001111110 L
b101101 M
b11001010 N
b1110111000010110 O
b11 P
b101101 Q
b11001010 R
b1110010010011000 S
b10100 T
b11110101 U
b11101001 V
b101000100111 W
b11 X
b10100 Y
b11110101 Z
b100101001011 [
b1100110 \
b1010110 ]
b1111100110110 ^
b11 _
b1100110 `
b1010110 a
b100000101111010 b
b1111101 c
b10100111 d
b1111100011011010 e
b11 f
b1111101 g
b10100111 h
b1100110101100101 i
b11110001 j
b10001111 k
b11 n
b11110001 o
b10001111 p
b11010011111 q
b100001 r
b1000100 s
b100010 t
b1111111010001010 u
b11 v
b100001 w
b1000100 x
b11101001110 y
b11110101 z
b1111010 {
b11 ~

#140000
0!
0"
b0 $
b0 %
0(
b0 *
b0 +
b0 /
b0 0
b0 1
b0 2
b0 3
b0 4
b0 G
b0 H
b0 J
b0 K
b1000101100000 L

#150000
1!
b100001 !!
1"
b10100111 "!
b1110111101001001 #!
b11110101 $!
b10001111 %!
b11111010110000100000011101001110000001101001111111001101011001010100000101111010000010010100101111100100100110000001000101100000 &
1(
b100 )!
b11110101 *!
b10001111 +!
b11111010110000100000011101001110000001101001111111001101011001010100000101111010000010010100101111100100100110000001000101100000 ,
b10011011011 ,!
b100 .
b0 5
b101101 6
b1100110 7
b1111101 8
b100001 9
b11110101 :
b0 ;
b1010110 <
b11001010 =
b10100111 >
b11110101 ?
b10001111 @
b0 A
b0 B
b10010 C
b0 D
b0 E
b1101111 F
b0 M
b0 N
b1110010010011000 O
b100 P
b0 Q
b0 R
b101101 T
b1101111 U
b10100 V
b100101001011 W
b100 X
b101101 Y
b1101111 Z
b1110011001110 [
b0 \
b0 ]
b100000101111010 ^
b100 _
b0 `
b0 a
b1100110 c
b11001010 d
b1100110101100101 e
b100 f
b1100110 g
b11001010 h
b1011011111100001 i
b1111101 j
b11110101 k
b11110001 l
b11010011111 m
b100 n
b1111101 o
b11110101 p
b101000000 q
b10010 r
b1010110 s
b1000100 t
b11101001110 u
b100 v
b10010 w
b1010110 x
b110101011010 y
b100001 z
b10100111 {
b1111010 |
b1111101011000010 }
b100 ~

#160000
0!
0"
0(

#170000
1!
b10010 !!
1"
b11001010 "!
b1110101101111101 #!
b100001 $!
b11110101 %!
b1001101101111101111010010010000110101011010000000010100000010110111111000010100000101111010000111001100111011100100100110000001000101100000 &
b11110101 &!
b10001111 '!
1(
b10011011011 (!
b101 )!
b100001 *!
b11110101 +!
b1001101101111101111010010010000110101011010000000010100000010110111111000010100000101111010000111001100111011100100100110000001000101100000 ,
b1101110000 ,!
b101 .
b0 6
b0 7
b1100110 8
b10010 9
b100001 :
b0 <
b0 =
b11001010 >
b1101111 ?
b11110101 @
b0 C
b0 F
b101 P
b0 T
b0 U
b101101 V
b1110011001110 W
b101 X
b0 Y
b0 Z
b101 _
b0 c
b0 d
b1011011111100001 e
b101 f
b0 g
b0 h
b1100110 j
b1101111 k
b1111101 l
b101000000 m
b101 n
b1100110 o
b1101111 p
b10110101111010 q
b0 r
b0 s
b1010110 t
b110101011010 u
b101 v
b0 w
b0 x
b10010 z
b11001010 {
b10100111 |
b1110111101001001 }
b101 ~

#180000
0!
0"
0(

#190000
1!
b0 !!
1"
b0 "!
b10010 $!
b1101111 %!
b110111000011101011011111010000110101011010001011010111101010110111111000010100000101111010000111001100111011100100100110000001000101100000 &
b100001 &!
b11110101 '!
1(
b1101110000 (!
b110 )!
b10010 *!
b1101111 +!
b110111000011101011011111010000110101011010001011010111101010110111111000010100000101111010000111001100111011100100100110000001000101100000 ,
b101100111110 ,!
b110 .
b0 8
b0 9
b10010 :
b0 >
b0 ?
b1101111 @
b110 P
b0 V
b110 X
b110 _
b110 f
b0 j
b0 k
b1100110 l
b10110101111010 m
b110 n
b0 o
b0 p
b0 t
b110 v
b0 z
b0 {
b11001010 |
b1110101101111101 }
b110 ~

#200000
0!
0"
0(

#210000
1!
1"
b0 $!
b0 %!
b10110011111011101011011111010000110101011010001011010111101010110111111000010100000101111010000111001100111011100100100110000001000101100000 &
b10010 &!
1'
b1101111 '!
1(
b101100111110 (!
b111 )!
b0 *!
b0 +!
b10110011111011101011011111010000110101011010001011010111101010110111111000010100000101111010000111001100111011100100100110000001000101100000 ,
1-
b111 .
b0 :
b0 @
b111 P
b111 X
b111 _
b111 f
b0 l
b111 n
b111 v
b0 |
b111 ~

#220000
0!
0"
0(

#230000
1!
1"
b0 &!
b0 '!
1(
